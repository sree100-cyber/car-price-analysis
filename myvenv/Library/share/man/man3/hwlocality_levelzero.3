.TH "hwlocality_levelzero" 3 "Version 2.12.1" "Hardware Locality (hwloc)" \" -*- nroff -*-
.ad l
.nh
.SH NAME
hwlocality_levelzero \- Interoperability with the oneAPI Level Zero interface\&.
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBhwloc_levelzero_get_device_cpuset\fP (\fBhwloc_topology_t\fP topology, ze_device_handle_t device, \fBhwloc_cpuset_t\fP set)"
.br
.ti -1c
.RI "int \fBhwloc_levelzero_get_sysman_device_cpuset\fP (\fBhwloc_topology_t\fP topology, zes_device_handle_t device, \fBhwloc_cpuset_t\fP set)"
.br
.ti -1c
.RI "\fBhwloc_obj_t\fP \fBhwloc_levelzero_get_device_osdev\fP (\fBhwloc_topology_t\fP topology, ze_device_handle_t device)"
.br
.ti -1c
.RI "\fBhwloc_obj_t\fP \fBhwloc_levelzero_get_sysman_device_osdev\fP (\fBhwloc_topology_t\fP topology, zes_device_handle_t device)"
.br
.in -1c
.SH "Detailed Description"
.PP 
This interface offers ways to retrieve topology information about devices managed by the Level Zero API, both for main Core devices (ZE API) and the Sysman devices (ZES API)\&. 
.SH "Function Documentation"
.PP 
.SS "int hwloc_levelzero_get_device_cpuset (\fBhwloc_topology_t\fP topology, ze_device_handle_t device, \fBhwloc_cpuset_t\fP set)\fC [inline]\fP"

.PP
Get the CPU set of logical processors that are physically close to the Level Zero device \fCdevice\fP\&. Store in \fCset\fP the CPU-set describing the locality of the Level Zero device \fCdevice\fP\&.
.PP
Topology \fCtopology\fP and device \fCdevice\fP must match the local machine\&. The Level Zero library must have been initialized with zeInit()\&. I/O devices detection and the Level Zero component are not needed in the topology\&.
.PP
The function only returns the locality of the device\&. If more information about the device is needed, OS objects should be used instead, see \fBhwloc_levelzero_get_device_osdev()\fP\&.
.PP
This function is currently only implemented in a meaningful way for Linux; other systems will simply get a full cpuset\&.
.PP
\fBReturns\fP
.RS 4
0 on success\&. 
.PP
-1 on error, for instance if device information could not be found\&.
.RE
.PP
\fBNote\fP
.RS 4
zeDevicePciGetPropertiesExt() must be supported, or the entire machine locality will be returned\&. 
.RE
.PP

.SS "\fBhwloc_obj_t\fP hwloc_levelzero_get_device_osdev (\fBhwloc_topology_t\fP topology, ze_device_handle_t device)\fC [inline]\fP"

.PP
Get the hwloc OS device object corresponding to Level Zero device \fCdevice\fP\&. 
.PP
\fBReturns\fP
.RS 4
The hwloc OS device object that describes the given Level Zero device \fCdevice\fP\&. 
.PP
\fCNULL\fP if none could be found\&.
.RE
.PP
Topology \fCtopology\fP and device \fCdv_ind\fP must match the local machine\&. The Level Zero library must have been initialized with zeInit()\&. I/O devices detection and the Level Zero component must be enabled in the topology\&. If not, the locality of the object may still be found using \fBhwloc_levelzero_get_device_cpuset()\fP\&.
.PP
\fBNote\fP
.RS 4
If the input ZE device is actually a subdevice, then its parent (root device) is actually translated, i\&.e\&. the main hwloc OS device is returned instead of one of its children\&.
.PP
The corresponding hwloc PCI device may be found by looking at the result parent pointer (unless PCI devices are filtered out)\&.
.PP
zeDevicePciGetPropertiesExt() must be supported\&. 
.RE
.PP

.SS "int hwloc_levelzero_get_sysman_device_cpuset (\fBhwloc_topology_t\fP topology, zes_device_handle_t device, \fBhwloc_cpuset_t\fP set)\fC [inline]\fP"

.PP
Get the CPU set of logical processors that are physically close to the Level Zero Sysman device \fCdevice\fP\&. Store in \fCset\fP the CPU-set describing the locality of the Level Zero device \fCdevice\fP\&.
.PP
Topology \fCtopology\fP and device \fCdevice\fP must match the local machine\&. The Level Zero library must have been initialized with Sysman enabled with zesInit()\&. I/O devices detection and the Level Zero component are not needed in the topology\&.
.PP
The function only returns the locality of the device\&. If more information about the device is needed, OS objects should be used instead, see \fBhwloc_levelzero_get_device_osdev()\fP\&.
.PP
This function is currently only implemented in a meaningful way for Linux; other systems will simply get a full cpuset\&.
.PP
\fBReturns\fP
.RS 4
0 on success\&. 
.PP
-1 on error, for instance if device information could not be found\&. 
.RE
.PP

.SS "\fBhwloc_obj_t\fP hwloc_levelzero_get_sysman_device_osdev (\fBhwloc_topology_t\fP topology, zes_device_handle_t device)\fC [inline]\fP"

.PP
Get the hwloc OS device object corresponding to Level Zero Sysman device \fCdevice\fP\&. 
.PP
\fBReturns\fP
.RS 4
The hwloc OS device object that describes the given Level Zero device \fCdevice\fP\&. 
.PP
\fCNULL\fP if none could be found\&.
.RE
.PP
Topology \fCtopology\fP and device \fCdv_ind\fP must match the local machine\&. The Level Zero library must have been initialized with Sysman enabled with zesInit()\&. I/O devices detection and the Level Zero component must be enabled in the topology\&. If not, the locality of the object may still be found using \fBhwloc_levelzero_get_device_cpuset()\fP\&.
.PP
\fBNote\fP
.RS 4
If the input ZES device is actually a subdevice, then its parent (root device) is actually translated, i\&.e\&. the main hwloc OS device is returned instead of one of its children\&.
.PP
The corresponding hwloc PCI device may be found by looking at the result parent pointer (unless PCI devices are filtered out)\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Hardware Locality (hwloc) from the source code\&.
